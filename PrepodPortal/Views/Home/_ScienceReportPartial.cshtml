@model PrepodPortal.Models.ScienceReport

<style>
   .reportsTable, .reportsTable tr, .reportsTable td, .reportsTable th {
      border: 1px solid #777 !important;
   }

      .reportsTable td, .reportsTable th {
         padding: 5px;
      }
</style>

<p>
   <h1>Захист дисертацій</h1>
</p>

@{
   int counterDissertationDefenses = 1;

   for (int i = 1; i <= Enum.GetValues(typeof(Enums.DissertationDefensTypes)).Length; i++)
   {
      <p>
         @Enum.GetName(typeof(Enums.DissertationDefensTypes), i)
      </p>

      List<PrepodPortal.Models.DissertationDefens> DissertationDefense = new List<PrepodPortal.Models.DissertationDefens>();

      switch ((Enums.DissertationDefensTypes)i)
      {
         case Enums.DissertationDefensTypes.PHD:
            DissertationDefense = Model.DissertationDefensesPHD;
            break;
         case Enums.DissertationDefensTypes.PH_D:
            DissertationDefense = Model.DissertationDefensesPH_D;
            break;
      }

      <table class="reportsTable">
         <thead>
            <tr>
               <th>#</th>
               <th>
                  Прізвище,  ім’я,
                  по батькові
               </th>
               <th>
                  Тема дисертації, шифр та назва спеціальності
               </th>
               <th>
                  Дата захисту
               </th>
               <th>
                  Дата	отримання диплому
               </th>
               <th>
                  № диплома
               </th>
            </tr>
         </thead>
         <tbody>
            @foreach (var dissertDefense in DissertationDefense)
            {
               <tr>
                  <td>@counterDissertationDefenses</td>
                  <td>
                     @dissertDefense.UserProfile.Name
                  </td>
                  <td>
                     @dissertDefense.Theme, @dissertDefense.CipherAndSpecialty
                  </td>
                  <td>
                     @if (dissertDefense.DefenseDate.HasValue)
                     { <text>@dissertDefense.DefenseDate.Value.ToShortDateString() </text>}
                  </td>
                  <td>
                     @if (dissertDefense.ReceiveDiplomaDate.HasValue)
                     { <text>@dissertDefense.ReceiveDiplomaDate.Value.ToShortDateString()  </text>}
                  </td>
                  <td>
                     @dissertDefense.DiplomaNumber
                  </td>
               </tr>
               counterDissertationDefenses += 1;
            }
         </tbody>
      </table>

      counterDissertationDefenses = 1;
   }
}

<p>
   <h1>Отримання вченого звання</h1>
</p>

@{
   int counterAcademicDegree = 1;

   for (int i = 1; i <= Enum.GetValues(typeof(Enums.AcademicDegreeGainTypes)).Length; i++)
   {
      List<PrepodPortal.Models.AcademicDegree> AcademicDegree = new List<PrepodPortal.Models.AcademicDegree>();

      switch ((Enums.AcademicDegreeGainTypes)i)
      {
         case Enums.AcademicDegreeGainTypes.Professor:
            <p>
               Отримання звання Професора
            </p>
            AcademicDegree = Model.AcademicDegreeGainsProf;
            break;
         case Enums.AcademicDegreeGainTypes.AssistantProfessor:
            <p>
               Отримання звання Кандидата Наук
            </p>
            AcademicDegree = Model.AcademicDegreeGainsAssitProf;
            break;
      }

      <table class="reportsTable">
         <thead>
            <tr>
               <th>#</th>
               <th>
                  Прізвище,  ім’я,
                  по батькові
               </th>
               <th>
                  Дата	отримання диплому
               </th>
               <th>
                  № диплома
               </th>
            </tr>
         </thead>
         <tbody>
            @foreach (var academicDegree in AcademicDegree)
            {
               <tr>
                  <td>@counterAcademicDegree</td>
                  <td>
                     @academicDegree.UserProfile.Name
                  </td>
                  <td>
                     @if (academicDegree.ReceiveDiplomaDate.HasValue)
                     { <text>@academicDegree.ReceiveDiplomaDate.Value.ToShortDateString()  </text>}
                  </td>
                  <td>
                     @academicDegree.DiplomaNumber
                  </td>
               </tr>
               counterAcademicDegree += 1;
            }
         </tbody>
      </table>

      counterAcademicDegree = 1;
   }
}

<p>
   <h1>Підвищення кваліфікації науково-педагогічних працівників</h1>
</p>

@{
   int counterQualIncrease = 1;

   List<PrepodPortal.Models.QualificationIncrease> QualIncrease = new List<PrepodPortal.Models.QualificationIncrease>();
   QualIncrease = Model.QualificationIncreases;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я, по батькові
            </th>
            <th>
               Стажування у ВНЗ України (№ наказу, тема стажування)
            </th>
            <th>
               Стажування за кордоном (№ наказу, тема стажування)
            </th>
            <th>
               Курси підвищення кваліфікації (№ наказу)
            </th>
            <th>
               Творчі Відпустки(№ наказу)
            </th>
            <th>
               Усього підвищили кваліфікацію
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var qualIncrease in QualIncrease)
         {
            <tr>
               <td>@counterQualIncrease</td>
               <td>
                  @qualIncrease.UserProfile.Name
               </td>
               <td>
                  @if (qualIncrease.Type == (int)Enums.QualificationIncreaseTypes.InternshipInUkranianUniversity)
                  {
                     <text>@qualIncrease.OrderNumber, @qualIncrease.InternshipTheme, @qualIncrease.Organisation  </text>
                     if (qualIncrease.StartDate.HasValue && qualIncrease.EndDate.HasValue)
                     {
                        <text>, @qualIncrease.StartDate.Value.ToShortDateString()  - @qualIncrease.EndDate.Value.ToShortDateString() </text>
                     }
                  }
               </td>
               <td>
                  @if (qualIncrease.Type == (int)Enums.QualificationIncreaseTypes.InternshipOverseas)
                  {
                     <text>@qualIncrease.OrderNumber, @qualIncrease.InternshipTheme, @qualIncrease.Organisation  </text>
                     if (qualIncrease.StartDate.HasValue && qualIncrease.EndDate.HasValue)
                     {
                        <text>, @qualIncrease.StartDate.Value.ToShortDateString()  - @qualIncrease.EndDate.Value.ToShortDateString() </text>
                     }
                  }
               </td>
               <td>
                  @if (qualIncrease.Type == (int)Enums.QualificationIncreaseTypes.QualificationIncreaseCourses)
                  {
                     <text>@qualIncrease.OrderNumber, @qualIncrease.Organisation  </text>
                     if (qualIncrease.StartDate.HasValue && qualIncrease.EndDate.HasValue)
                     {
                        <text>, @qualIncrease.StartDate.Value.ToShortDateString()  - @qualIncrease.EndDate.Value.ToShortDateString() </text>
                     }
                  }
               </td>
               <td>
                  @if (qualIncrease.Type == (int)Enums.QualificationIncreaseTypes.CreativeVacations)
                  {
                     <text>@qualIncrease.OrderNumber, @qualIncrease.Organisation  </text>
                     if (qualIncrease.StartDate.HasValue && qualIncrease.EndDate.HasValue)
                     {
                        <text>, @qualIncrease.StartDate.Value.ToShortDateString()  - @qualIncrease.EndDate.Value.ToShortDateString() </text>
                     }
                  }
               </td>
               <td></td>
            </tr>
            counterQualIncrease += 1;
         }
      </tbody>
   </table>

   counterQualIncrease = 1;
}

<p>
   <h1>Звіт з монографій</h1>
</p>

@{
   int counterMonographs = 1;

   for (int i = 1; i <= Enum.GetValues(typeof(Enums.MonographTypes)).Length; i++)
   {
      <p>
         @Enum.GetName(typeof(Enums.MonographTypes), i)
      </p>

      List<PrepodPortal.Models.Monograph> monographs = new List<PrepodPortal.Models.Monograph>();

      switch ((Enums.MonographTypes)i)
      {
         case Enums.MonographTypes.PublishedInDomesticEditions:
            monographs = Model.MonographPublishedInDomesticEditions;
            break;
         case Enums.MonographTypes.PublishedInForeignEditions:
            monographs = Model.MonographPublishedInForeignEditions;
            break;
         case Enums.MonographTypes.SectionsPublishedInDomesticEditions:
            monographs = Model.MonographSectionsPublishedInDomesticEditions;
            break;
      }

      <table class="reportsTable">
         <thead>
            <tr>
               <th>#</th>
               <th>
                  Прізвище,  ім’я, по батькові авторів
               </th>
               <th>
                  Назва
               </th>
               <th>
                  Вихідні дані
                  та ISBN
               </th>
               <th>
                  Кількість
                  сторінок
               </th>
               <th>
                  Кількість друк. арк.
               </th>
            </tr>
         </thead>
         <tbody>
            @foreach (var monograph in monographs.GroupBy(m => m.Publication.Guid).Select(m => m.First()).ToList())
            {
               <tr>
                  <td>@counterMonographs</td>
                  <td>
                     @monograph.AuthorNames
                  </td>
                  <td>
                     @monograph.Title
                  </td>
                  <td>
                     @monograph.ISBN, @monograph.PublisherName, @monograph.PublishedYear,
                     @monograph.PublishedLocation
                  </td>
                  <td>
                     @monograph.NumPagesTotal@if (monograph.NumPagesByAuthor.HasValue)
                     {<text>(@monograph.NumPagesByAuthor)</text>}
                  </td>
                  <td>
                     @monograph.NumPrintedPagesTotal@if (monograph.NumPrintedPagesByAuthor.HasValue)
                     {<text>(@monograph.NumPrintedPagesByAuthor)</text>}
                  </td>
               </tr>
               counterMonographs += 1;
            }
         </tbody>
      </table>

      counterMonographs = 1;
   }
}

<p>
   <h1>Звіт з підручників</h1>
</p>

@{
   int counterSchoolBooks = 1;

   for (int i = 1; i <= Enum.GetValues(typeof(Enums.SchoolBookTypes)).Length; i++)
   {
      <p>
         @Enum.GetName(typeof(Enums.SchoolBookTypes), i)
      </p>

      List<PrepodPortal.Models.SchoolBook> schoolBooks = new List<PrepodPortal.Models.SchoolBook>();

      switch ((Enums.SchoolBookTypes)i)
      {
         case Enums.SchoolBookTypes.GryphMOHOfUkraine:
            schoolBooks = Model.SchoolBookGryphMOHOfUkraine;
            break;
         case Enums.SchoolBookTypes.RecommendedByAcademicCouncilOfKSU:
            schoolBooks = Model.SchoolBookRecommendedByAcademicCouncilOfKSU;
            break;
         case Enums.SchoolBookTypes.Other:
            schoolBooks = Model.SchoolBookOthers;
            break;
      }

      <table class="reportsTable">
         <thead>
            <tr>
               <th>#</th>
               <th>
                  Прізвище,  ім’я, по батькові авторів
               </th>
               <th>
                  Вид грифа МОН Украины (наказ № __ від _____р.)
               </th>
               <th>
                  Вихідні дані
                  та ISBN
               </th>
               <th>
                  Кількість
                  сторінок
               </th>
               <th>
                  Кількість друк. арк.
               </th>
            </tr>
         </thead>
         <tbody>
            @foreach (var schoolBook in schoolBooks.GroupBy(m => m.Publication.Guid).Select(m => m.First()).ToList())
            {
               <tr>
                  <td>@counterSchoolBooks</td>
                  <td>
                     @schoolBook.AuthorNames
                  </td>
                  <td>
                     @String.Format("{0} (наказ # {1} від {2})", Enum.GetName(typeof(Enums.MOHGryphTypes), schoolBook.GryphType), schoolBook.OrderNum, schoolBook.OrderDate.Value.ToShortDateString())
                  </td>
                  <td>
                     @schoolBook.ISBN, @schoolBook.PublisherName , @schoolBook.PublishedYear,
                     @schoolBook.PublishedLocation
                  </td>
                  <td>
                     @schoolBook.NumPagesTotal@if (schoolBook.NumPagesByAuthor.HasValue)
                     {<text>(@schoolBook.NumPagesByAuthor)</text>}
                  </td>
                  <td>
                     @schoolBook.NumPrintedPagesTotal @if (schoolBook.NumPrintedPagesByAuthor.HasValue)
                     {<text>(@schoolBook.NumPrintedPagesByAuthor)</text>}
                  </td>
               </tr>
               counterSchoolBooks += 1;
            }
         </tbody>
      </table>

      counterSchoolBooks = 1;
   }
}

<p>
   <h1>Звіт з посібників</h1>
</p>

@{
   int counterTutorials = 1;

   for (int i = 1; i <= Enum.GetValues(typeof(Enums.SchoolBookTypes)).Length; i++)
   {
      <p>
         @Enum.GetName(typeof(Enums.SchoolBookTypes), i)
      </p>

      List<PrepodPortal.Models.SchoolBook> tutorials = new List<PrepodPortal.Models.SchoolBook>();

      switch ((Enums.SchoolBookTypes)i)
      {
         case Enums.SchoolBookTypes.GryphMOHOfUkraine:
            tutorials = Model.TutorialGryphMOHOfUkraine;
            break;
         case Enums.SchoolBookTypes.RecommendedByAcademicCouncilOfKSU:
            tutorials = Model.TutorialRecommendedByAcademicCouncilOfKSU;
            break;
         case Enums.SchoolBookTypes.Other:
            tutorials = Model.TutorialOthers;
            break;
      }

      <table class="reportsTable">
         <thead>
            <tr>
               <th>#</th>
               <th>
                  Прізвище,  ім’я, по батькові авторів
               </th>
               <th>
                  Вид грифа МОН Украины (наказ № __ від _____р.)
               </th>
               <th>
                  Вихідні дані
                  та ISBN
               </th>
               <th>
                  Кількість
                  сторінок
               </th>
               <th>
                  Кількість друк. арк.
               </th>
            </tr>
         </thead>
         <tbody>
            @foreach (var tutorial in tutorials.GroupBy(m => m.Publication.Guid).Select(m => m.First()).ToList())
            {
               <tr>
                  <td>@counterTutorials</td>
                  <td>
                     @tutorial.AuthorNames
                  </td>
                  <td>
                     @String.Format("{0} (наказ # {1} від {2})", Enum.GetName(typeof(Enums.MOHGryphTypes), tutorial.GryphType), tutorial.OrderNum, tutorial.OrderDate.Value.ToShortDateString())
                  </td>
                  <td>
                     @tutorial.ISBN, @tutorial.PublisherName , @tutorial.PublishedYear,
                     @tutorial.PublishedLocation
                  </td>
                  <td>
                     @tutorial.NumPagesTotal@if (tutorial.NumPagesByAuthor.HasValue)
                     {<text>(@tutorial.NumPagesByAuthor)</text>}
                  </td>
                  <td>
                     @tutorial.NumPrintedPagesTotal @if (tutorial.NumPrintedPagesByAuthor.HasValue)
                     {<text>(@tutorial.NumPrintedPagesByAuthor)</text>}
                  </td>
               </tr>
               counterTutorials += 1;
            }
         </tbody>
      </table>

      counterTutorials = 1;
   }
}

<p>
   <h1>Звіт з Методич. рекомендацій</h1>
</p>

@{
   int counterGuidelines = 1;
   <p>
      Методичні рекомендації
   </p>

   List<PrepodPortal.Models.SchoolBook> guidelines = new List<PrepodPortal.Models.SchoolBook>();
   guidelines = Model.Guidelines;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я, по батькові авторів
            </th>
            <th>
               Назва
            </th>
            <th>
               Вихідні дані
               та ISBN
            </th>
            <th>
               Кількість
               сторінок
            </th>
            <th>
               Кількість друк. арк.
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var guideline in guidelines.GroupBy(m => m.Publication.Guid).Select(m => m.First()).ToList())
         {
            <tr>
               <td>@counterGuidelines</td>
               <td>
                  @guideline.AuthorNames
               </td>
               <td>
                  @guideline.Title
               </td>
               <td>
                  @guideline.ISBN, @guideline.PublisherName , @guideline.PublishedYear,
                  @guideline.PublishedLocation
               </td>
               <td>
                  @guideline.NumPagesTotal@if (guideline.NumPagesByAuthor.HasValue)
                  {<text>(@guideline.NumPagesByAuthor)</text>}
               </td>
               <td>
                  @guideline.NumPrintedPagesTotal @if (guideline.NumPrintedPagesByAuthor.HasValue)
                  {<text>(@guideline.NumPrintedPagesByAuthor)</text>}
               </td>
            </tr>
            counterGuidelines += 1;
         }
      </tbody>
   </table>

   counterGuidelines = 1;
}

<p>
   <h1>Звіт зі статей</h1>
</p>

@{

   int counterArticles = 1;

   for (int i = 1; i <= Enum.GetValues(typeof(Enums.ArticleTypes)).Length; i++)
   {
      <p>
         @Enum.GetName(typeof(Enums.ArticleTypes), i)
      </p>

      List<PrepodPortal.Models.Article> articles = new List<PrepodPortal.Models.Article>();

      switch ((Enums.ArticleTypes)i)
      {
         case Enums.ArticleTypes.WoSOrScopusSNIPIndexHigher04:
            articles = Model.ArticlesWoSOrScopusSNIPIndexHigher04;
            break;
         case Enums.ArticleTypes.WoSOrScopusSNIPIndexLess04:
            articles = Model.ArticlesWoSOrScopusSNIPIndexLess04;
            break;
         case Enums.ArticleTypes.PrintedInUkraineScienceEditionAndHasISSN:
            articles = Model.ArticlesPrintedInUkraineScienceEditionAndHasISSN;
            break;
         case Enums.ArticleTypes.PrintedInScienceMagazineWithImpactFactor:
            articles = Model.ArticlesPrintedInScienceMagazineWithImpactFactor;
            break;
         case Enums.ArticleTypes.PrintedInOtherUkraineEditions:
            articles = Model.ArticlesPrintedInOtherUkraineEditions;
            break;
      }

      <table class="reportsTable">
         <thead>
            <tr>
               <th>#</th>
               @switch ((Enums.ArticleTypes)i)
               {
                  case Enums.ArticleTypes.WoSOrScopusSNIPIndexHigher04:
                  case Enums.ArticleTypes.WoSOrScopusSNIPIndexLess04:
                     <th>
                        Повні дані про статтю з веб-адресою електронної версії
                     </th>
                     <th>
                        Наукометр. база даних
                     </th>
                     <th>
                        Індекс SNIP
                     </th>
                     break;
                  case Enums.ArticleTypes.PrintedInUkraineScienceEditionAndHasISSN:
                  case Enums.ArticleTypes.PrintedInScienceMagazineWithImpactFactor:
                  case Enums.ArticleTypes.PrintedInOtherUkraineEditions:
                     <th>
                        Прізвище,  ім’я, по батькові автора
                     </th>
                     <th>
                        Назва
                     </th>
                     <th>
                        Вихідні дані (назва видання, номер, випуск, том, місце видання, рік видання, номери сторінок)
                     </th>
                     break;
               }
               <th>
                  Кількість
                  сторінок
               </th>
               <th>
                  Кількість друк. арк.
               </th>
            </tr>
         </thead>
         <tbody>
            @foreach (PrepodPortal.Models.Article article in articles.GroupBy(a => a.Publication.Guid).Select(p => p.First()).ToList())
            {
               <tr>
                  <td>@counterArticles</td>
                  @switch ((Enums.ArticleTypes)i)
                  {
                     case Enums.ArticleTypes.WoSOrScopusSNIPIndexHigher04:
                     case Enums.ArticleTypes.WoSOrScopusSNIPIndexLess04:
                        <td>

                           @article.AuthorNames, @article.Title, @article.EditionName,
                           @article.Number, @article.Issue, @article.Tome, @article.PublishedLocation, @article.PublishedYear,
                           @article.PageNumbers, @article.URL

                        </td>
                        <td>
                           @article.ScientometricDB
                        </td>
                        <td>
                           @article.SNIPIndex
                        </td>
                        break;
                     case Enums.ArticleTypes.PrintedInUkraineScienceEditionAndHasISSN:
                     case Enums.ArticleTypes.PrintedInScienceMagazineWithImpactFactor:
                     case Enums.ArticleTypes.PrintedInOtherUkraineEditions:
                        <td>
                           @article.AuthorNames
                        </td>
                        <td>
                           @article.Title
                        </td>
                        <td>
                           @article.Number, @article.Issue, @article.Tome, @article.PublishedLocation, @article.PublishedYear,
                           @article.PageNumbers, @article.URL
                        </td>
                        break;
                  }
                  <td>
                     @article.NumPagesTotal@if (article.NumPagesByAuthor.HasValue)
                     {<text>(@article.NumPagesByAuthor)</text>}
                  </td>
                  <td>
                     @article.NumPrintedPagesTotal@if (article.NumPrintedPagesByAuthor.HasValue)
                     {<text>(@article.NumPrintedPagesByAuthor)</text>}
                  </td>
               </tr>
               counterArticles += 1;
            }
         </tbody>
      </table>

      counterArticles = 1;
   }
}

<p>
   <h1>Звіт з тез доповідей</h1>
</p>

@{
   int counterLectureThes = 1;
   <p>
      Тези доповідей
   </p>

   List<PrepodPortal.Models.LectureThes> lectureTheses = new List<PrepodPortal.Models.LectureThes>();
   lectureTheses = Model.LectureTheses;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я, по батькові авторів
            </th>
            <th>
               Назва
            </th>
            <th>
               Вихідні дані (назва видання, номер, випуск, том, місце видання, рік видання, номери сторінок)
            </th>
            <th>
               Кількість
               сторінок
            </th>
            <th>
               Кількість друк. арк.
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var lectureThes in lectureTheses.GroupBy(m => m.Publication.Guid).Select(m => m.First()).ToList())
         {
            <tr>
               <td>@counterLectureThes</td>
               <td>
                  @lectureThes.AuthorNames
               </td>
               <td>
                  @lectureThes.Title
               </td>
               <td>
                  @lectureThes.EditionTitle , @lectureThes.Issue, @lectureThes.Number , @lectureThes.PublishedYear,
                  @lectureThes.PageNumbers
               </td>
               <td>
                  @lectureThes.NumPagesTotal@if (lectureThes.NumPagesByAuthor.HasValue)
                  {<text>(@lectureThes.NumPagesByAuthor)</text>}
               </td>
               <td>
                  @lectureThes.NumPrintedPagesTotal @if (lectureThes.NumPrintedPagesByAuthor.HasValue)
                  {<text>(@lectureThes.NumPrintedPagesByAuthor)</text>}
               </td>
            </tr>
            counterLectureThes += 1;
         }
      </tbody>
   </table>

   counterLectureThes = 1;
}

<p>
   <h1>Профілі в наукометричних базах даних</h1>
</p>

@{
   int counterScientoMetricDbProfiles = 1;

   List<PrepodPortal.Models.ScientometricDbProfile> scientometricDbProfiles = new List<PrepodPortal.Models.ScientometricDbProfile>();
   scientometricDbProfiles = Model.ScientometricDbProfiles;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я, по батькові
            </th>
            <th>
               Наукова база
            </th>
            <th>
               Веб-адреса авторського профілю
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var profile in scientometricDbProfiles)
         {
            <tr>
               <td>@counterScientoMetricDbProfiles</td>
               <td>
                  @profile.UserProfile.Name
               </td>
               <td>
                  @profile.Name
               </td>
               <td>
                  @profile.ProfileLink
               </td>
            </tr>
            counterScientoMetricDbProfiles += 1;
         }
      </tbody>
   </table>

   counterScientoMetricDbProfiles = 1;
}


<p>
   <h1>Отримання охоронних документів на об’єкти права інтелектуальної власності.</h1>
</p>

@{

   <p>
      Патенти
   </p>

   int counterPatents = 1;

   List<PrepodPortal.Models.Patent> Patents = new List<PrepodPortal.Models.Patent>();
   Patents = Model.Patents;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я,
               по батькові
               авторів
            </th>
            <th>
               Назва
            </th>
            <th>
               Вихідні дані
               (номер заявки, номер патенту, дата публікації)
            </th>
            <th>
               Власник патенту
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var patent in Patents.GroupBy(m => m.SecurityDocument.Guid).Select(m => m.First()).ToList())
         {
            <tr>
               <td>@counterPatents</td>
               <td>
                  @patent.AuthorNames
               </td>
               <td>
                  @patent.Title
               </td>
               <td>
                  @patent.ApplicationNum, @patent.Number @if (patent.PublishDate.HasValue)
                  {<text>, @patent.PublishDate.Value.ToShortDateString()</text>}
               </td>
               <td>
                  @patent.Owner
               </td>
            </tr>
            counterPatents += 1;
         }
      </tbody>
   </table>

   counterPatents = 1;
}

@{

   <p>
      Свідоцтва про реєстрацію авторських прав
   </p>

   int counterCopyrights = 1;

   List<PrepodPortal.Models.Copyright> Copyrights = new List<PrepodPortal.Models.Copyright>();
   Copyrights = Model.Copyrights;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я,
               по батькові
               авторів
            </th>
            <th>
               Вид, назва твору
            </th>
            <th>
               Вихідні дані
               (№, дата реєстрації)
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var copyright in Copyrights.GroupBy(m => m.SecurityDocument.Guid).Select(m => m.First()).ToList())
         {
            <tr>
               <td>@counterCopyrights</td>
               <td>
                  @copyright.AuthorNames
               </td>
               <td>
                  @copyright.Title
               </td>
               <td>
                  @copyright.RegistrationNum  @if (copyright.RegisteredDate.HasValue)
                  {<text>, @copyright.RegisteredDate.Value.ToShortDateString()</text>}
               </td>
            </tr>
            counterCopyrights += 1;
         }
      </tbody>
   </table>

   counterCopyrights = 1;
}

<p>
   <h1>Апробація результатів наукових досліджень.</h1>
</p>

@{

   <p>
      Участь у наукових симпозіумах, конференціях, семінарах
   </p>

   int counterConferenses = 1;

   List<PrepodPortal.Models.Conference> Conferenses = new List<PrepodPortal.Models.Conference>();
   Conferenses = Model.Conference;

   <table class="reportsTable">
      <thead>
         <tr>
            <th>#</th>
            <th>
               Прізвище,  ім’я,
               по батькові учасників
            </th>
            <th>
               Назва та рівень заходу
            </th>
            <th>
               Місце та дата проведення
            </th>
         </tr>
      </thead>
      <tbody>
         @foreach (var conferense in Conferenses)
         {
            <tr>
               <td>@counterConferenses</td>
               <td>
                  @conferense.UserProfile.Name
               </td>
               <td>
                  @conferense.Title
               </td>
               <td>
                  @if (conferense.IsHeld.HasValue && conferense.IsHeld.Value)
                  {
                     @conferense.HeldLocation  if (conferense.HeldDate.HasValue)
                     {<text> @conferense.HeldDate.Value.ToShortDateString() </text>}
                  }
                  else
                  {
                     <text>Не відбулася</text>
                  }
               </td>
            </tr>
            counterConferenses += 1;
         }
      </tbody>
   </table>

   counterConferenses = 1;
}