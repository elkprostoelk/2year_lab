@model IEnumerable<PrepodPortal.Models.SecurityDocument>

@{
   bool isAdmin = User.IsInRole("admin");
   //bool isMe = C.GetMyId(User) == Model.UserId;
}

@if (TempData["closeForm"] != null)
{
   <script>
      closeForm();
   </script>
}

@foreach (var sdoc in Model)
{

   <div class="scienceBlock">

      @if (User.Identity.IsAuthenticated && C.GetMyId(User) == sdoc.UserId || isAdmin)
      {
         using (Ajax.BeginForm("DeleteSecurityDocument", new AjaxOptions() { HttpMethod = "Delete", LoadingElementId = "ajax_loader_securityDocuments", UpdateTargetId = "securityDocuments_body", InsertionMode = InsertionMode.Replace }))
         {
            @Html.AntiForgeryToken()
            <input type="hidden" name="Id" value="@sdoc.Id" />
            <input type="hidden" name="Type" value="@sdoc.Type" />
            <input type="submit" id="DeleteSecurityDocumentSubmit_@sdoc.Id" style="display:none" />
         }

         <div class="remove_scienceBlock" onclick="if(confirm('Ви дійсно бажаєте видалити обраний охоронний документ?')){$('#DeleteSecurityDocumentSubmit_@sdoc.Id').trigger('click')}"></div>
      }

      @switch ((Enums.SecurityDocTypes)sdoc.Type)
      {

         case Enums.SecurityDocTypes.Copyright:

            PrepodPortal.Models.Copyright copyright = sdoc.Copyright;

            <div class="scienceBlock_title">@copyright.Title</div>
            <div class="scienceBlock_mainInf">

               <div><span>Security document type: </span>@Enum.GetName(typeof(Enums.SecurityDocTypes), sdoc.Type)</div>
               <div><span>@Html.DisplayNameFor(model => model.Copyright.AuthorNames): </span>@Html.DisplayFor(model => copyright.AuthorNames)</div>
               <div><span>@Html.DisplayNameFor(model => model.Copyright.Title): </span>@Html.DisplayFor(model => copyright.Title)</div>
               <div><span>@Html.DisplayNameFor(model => model.Copyright.Type): </span>@Html.DisplayFor(model => copyright.Type)</div>
               <div><span>@Html.DisplayNameFor(model => model.Copyright.RegisteredDate): </span>@Html.DisplayFor(model => copyright.RegisteredDate)</div>
               <div><span>@Html.DisplayNameFor(model => model.Copyright.RegistrationNum): </span>@Html.DisplayFor(model => copyright.RegistrationNum)</div>

            </div>

            break;

         case Enums.SecurityDocTypes.Patent:

            PrepodPortal.Models.Patent patent = sdoc.Patent;

            <div class="scienceBlock_title">@patent.Title</div>
            <div class="scienceBlock_mainInf">

               <div><span>Security document type: </span>@Enum.GetName(typeof(Enums.SecurityDocTypes), sdoc.Type)</div>
               <div><span>@Html.DisplayNameFor(model => model.Patent.AuthorNames): </span>@Html.DisplayFor(model => patent.AuthorNames)</div>
               <div><span>@Html.DisplayNameFor(model => model.Patent.Title): </span>@Html.DisplayFor(model => patent.Title)</div>
               <div><span>@Html.DisplayNameFor(model => model.Patent.Owner): </span>@Html.DisplayFor(model => patent.Owner)</div>
               <div><span>@Html.DisplayNameFor(model => model.Patent.PublishDate): </span>@Html.DisplayFor(model => patent.PublishDate)</div>
               <div><span>@Html.DisplayNameFor(model => model.Patent.Number): </span>@Html.DisplayFor(model => patent.Number)</div>
               <div><span>@Html.DisplayNameFor(model => model.Patent.ApplicationNum): </span>@Html.DisplayFor(model => patent.ApplicationNum)</div>

            </div>

            break;

      }

   </div>

}