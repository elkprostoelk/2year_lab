@model PrepodPortal.Models.Project

@Scripts.Render("~/bundles/jqueryval")

@{
   bool isAdmin = User.IsInRole("admin");
}


@using (Ajax.BeginForm("EditProject", new AjaxOptions() { HttpMethod = "Post", LoadingElementId = "ajax_loader_main", UpdateTargetId = "right_col", InsertionMode = InsertionMode.Replace }))
{
   @Html.AntiForgeryToken()

   <input type="hidden" name="Id" value="@Model.Id" />
   <input type="hidden" name="UserId" value="@Model.UserId" />
   <input type="hidden" name="Guid" value="@Model.Guid" />

   <div class="puSection first">
      @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
      @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
   </div>

   <div class="puSection">
      @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
      @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
   </div>

   if (isAdmin)
   {
      <div class="puSection">
         @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
         @Html.DropDownListFor(model => model.Manager, new SelectList(C.GetPrepodNameList()), new { style = "height:auto; max-height:100px;" })
         @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
      </div>
   }
   else
   {
      <input type="hidden" name="Manager" value="@Model.Manager" />
   }

   <div class="puSection">
      @Html.LabelFor(model => model.MembersList, htmlAttributes: new { @class = "control-label col-md-2" })
      <select name="MembersList" style="height:auto; max-height:100px;" multiple>
         @foreach (string member in C.GetPrepodNameList())
         {
            if (Model.Members != null && Model.Members.Split(',').Contains(member) == true)
            {
               <option selected>@member</option>
            }
            else
            {
               <option>@member</option>
            }
         }
      </select>
      @Html.ValidationMessageFor(model => model.MembersList, "", new { @class = "text-danger" })
   </div>

   <div class="puSection">
      @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
      @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
   </div>

   <div class="puSection last">
      <button class="button blue" title="Змінити" type="submit" href="javascript:void(0)">
         Змінити
      </button>
   </div>
}